'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Dimension prop type

/**
 * Spotify player iframe widget
 *
 * @author Alexander Wallin <office@alexanderwallin.com>
 * @see https://developer.spotify.com/technologies/widgets/spotify-play-button/
 */

var dimensionPropType = _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]);

// Size presets, defined by Spotify
var sizePresets = {
  large: {
    width: 300,
    height: 380
  },
  compact: {
    width: 300,
    height: 80
  }
};

/**
 * SpotifyPlayer class
 */
var SpotifyPlayer = _react2.default.createClass({
  displayName: 'SpotifyPlayer',


  // ------------------------------------------------------
  // Component specs & lifecycle
  // ------------------------------------------------------

  propTypes: {

    // Spotify URI
    uri: _propTypes2.default.string.isRequired,

    // Size as either a preset or as custom dimensions
    size: _propTypes2.default.oneOfType([_propTypes2.default.oneOf(['large', 'compact']), _propTypes2.default.shape({
      width: dimensionPropType,
      height: dimensionPropType
    })]),

    // View
    view: _propTypes2.default.oneOf(['list', 'coverart']),

    // Theme
    theme: _propTypes2.default.oneOf(['black', 'white'])
  },

  getDefaultProps: function getDefaultProps() {
    return {
      size: 'large',
      view: 'list',
      theme: 'black'
    };
  },


  // ------------------------------------------------------
  // Render
  // ------------------------------------------------------

  render: function render() {
    var _props = this.props,
        uri = _props.uri,
        view = _props.view,
        theme = _props.theme;
    var size = this.props.size;


    if (typeof size === 'string') {
      size = sizePresets[size];
    }

    return _react2.default.createElement('iframe', {
      className: 'SpotifyPlayer',
      src: 'https://embed.spotify.com/?uri=' + uri + '&view=' + view + '&theme=' + theme,
      width: size.width,
      height: size.height,
      frameBorder: '0',
      allowTransparency: 'true'
    });
  }
});

exports.default = SpotifyPlayer;